<?php

namespace OguzhanTogay\HueClient\Symfony\DependencyInjection;

use Symfony\Component\Config\Definition\Builder\TreeBuilder;
use Symfony\Component\Config\Definition\ConfigurationInterface;

class Configuration implements ConfigurationInterface
{
    public function getConfigTreeBuilder(): TreeBuilder
    {
        $treeBuilder = new TreeBuilder('hue');
        $rootNode = $treeBuilder->getRootNode();

        $rootNode
            ->children()
                ->scalarNode('default_bridge')
                    ->defaultValue('main')
                    ->info('Default bridge to use when multiple bridges are configured')
                ->end()
                ->booleanNode('auto_discovery')
                    ->defaultTrue()
                    ->info('Enable automatic bridge discovery')
                ->end()
                ->arrayNode('bridges')
                    ->useAttributeAsKey('name')
                    ->arrayPrototype()
                        ->children()
                            ->scalarNode('ip')
                                ->isRequired()
                                ->cannotBeEmpty()
                                ->info('Bridge IP address')
                            ->end()
                            ->scalarNode('username')
                                ->info('Bridge username (obtained during setup)')
                            ->end()
                            ->arrayNode('options')
                                ->children()
                                    ->integerNode('timeout')
                                        ->defaultValue(5)
                                        ->info('Request timeout in seconds')
                                    ->end()
                                    ->booleanNode('verify')
                                        ->defaultFalse()
                                        ->info('Verify SSL certificates')
                                    ->end()
                                    ->integerNode('retry_attempts')
                                        ->defaultValue(3)
                                        ->info('Number of retry attempts')
                                    ->end()
                                    ->booleanNode('cache_enabled')
                                        ->defaultTrue()
                                        ->info('Enable response caching')
                                    ->end()
                                    ->scalarNode('cache_type')
                                        ->defaultValue('filesystem')
                                        ->info('Cache adapter type')
                                    ->end()
                                ->end()
                            ->end()
                        ->end()
                    ->end()
                ->end()
                ->arrayNode('discovery')
                    ->children()
                        ->integerNode('timeout')
                            ->defaultValue(5)
                            ->info('Discovery timeout in seconds')
                        ->end()
                    ->end()
                ->end()
                ->arrayNode('connection_pool')
                    ->children()
                        ->integerNode('max_connections')
                            ->defaultValue(10)
                            ->info('Maximum concurrent connections')
                        ->end()
                        ->integerNode('timeout')
                            ->defaultValue(5)
                            ->info('Connection timeout')
                        ->end()
                    ->end()
                ->end()
                ->arrayNode('cache')
                    ->children()
                        ->scalarNode('adapter')
                            ->defaultValue('filesystem')
                            ->info('Cache adapter (filesystem, redis)')
                        ->end()
                        ->arrayNode('ttl')
                            ->children()
                                ->integerNode('lights')->defaultValue(10)->end()
                                ->integerNode('groups')->defaultValue(30)->end()
                                ->integerNode('scenes')->defaultValue(60)->end()
                                ->integerNode('schedules')->defaultValue(60)->end()
                                ->integerNode('sensors')->defaultValue(5)->end()
                                ->integerNode('config')->defaultValue(300)->end()
                            ->end()
                        ->end()
                    ->end()
                ->end()
                ->arrayNode('api')
                    ->children()
                        ->booleanNode('enabled')
                            ->defaultFalse()
                            ->info('Enable REST API server')
                        ->end()
                        ->integerNode('port')
                            ->defaultValue(8080)
                            ->info('API server port')
                        ->end()
                        ->integerNode('rate_limit')
                            ->defaultValue(100)
                            ->info('Rate limit per minute')
                        ->end()
                    ->end()
                ->end()
            ->end();

        return $treeBuilder;
    }
}